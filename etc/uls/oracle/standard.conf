# -------------------------------------------------------------------
# standard.conf
# -------------------------------------------------------------------
#
# This is the default configuration file for the uls-client-oracle.
# All default definitions are made here for all scripts.
# If you want to use other definitions it is recommended that 
# you copy this file to a $ORACLE_SID.conf and in that file, 
# you keep ONLY those sections and parameters that you need to change to your needs.
# If that file exists in the same directory as the standard.conf itself, 
# it will automatically be processed. 
# Its settings will overwrite the defaults.
#
# E.g. you want extended monitoring, you want to gather metrics about cursors 
# and scheduler jobs. Then you need a file $ORACLE_SID.conf with this 
# contents:
#
#   [WATCH_ORACLE]
#   OPTIONS = FAILED_LOGIN_REPORT, TNSPING, CURSORS, SCHEDULER
# 
# This OPTIONS parameter will replace(!) the default OPTIONS parameter in standard.conf.
#
# That allows an automated update of the uls-client-oracle without 
# breaking your specific entries and allows the addition of new (default) sections.
#
#  +===============================================================+
#  | DO NOT CHANGE THIS FILE!                                      |
#  |                                                               |
#  | USE:     $ORACLE_SID.conf                                     |
#  |                                                               |
#  | and overwrite the necessary parameters with your definitions! |
#  |                                                               |
#  | See the notes above.                                          |
#  +===============================================================+
#
# -----
# General structure:
#
# [section]
# parameter = value
#
#
# -----
# Replacements and general usage within this configuration file:
#
# Generally, all sections, parameters and values are case sensitive.
#
# Replacements:
#   %%ENVVAR%%    will be replaced by the contents of the environment variable ENVVAR.
#   `os command`  will be replaced by the output of the os command.
#   [[parameter]] will be replaced by the value of the parameter 'parameter' in the same section.
#
#   Do not define endless recursive replacements! They will be aborted after 100 replacements.
#   AND DO NOT use e.g. %%%%envvar%%%%, that will be replaced to %%xxx%% where xxx is
#   the contents of the environment variable 'envvar' and then %%xxx%% will be replaced
#   by the contents of the environment variable 'xxx' (if it exists), and so on.
#
# Multi-line values can be defined with the here notation like:
# parameter = <<EOT
#   any value line 1
#   any value line 2
# EOT
#



# ===================================================================
[GENERAL]

# General section

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# -----
# Where to place the work and temporary files

# WORKING_DIR = /var/oracle_tools
# WORKING_DIR = /oracle/admin/%%ORACLE_SID%%/oracle_tools/var
# That will create a directory 'var' below the directory where the 
# ORACLE_TOOLS are unpacked.
# WORKING_DIR = `pwd`/var
WORKING_DIR = /var/tmp/ulsclientoracle/%%ORACLE_SID%%


# -----
# TEST_BEFORE_RUN
#
# This command is executed on os level and if its return value is 
#  = 0, then the following perl script is executed.
# != 0, then the calling script exits and does not execute the following perl script.
#
# No test is done, if no TEST_BEFORE_RUN is specified.


# SCCL commands must be in PATH of oracle_env
TEST_BEFORE_RUN = sccl_test_res oracle_%%ORACLE_SID%%
# TEST_BEFORE_RUN = /usr/local/sccl/bin/sccl_test_res oracle_%%ORACLE_SID%%
# TEST_BEFORE_RUN = /usr/local/sccl/bin/sccl_test_res dummy
# Looks as if 'cd' does not work! Why?
# TEST_BEFORE_RUN = cd /oracle/admin/%%ORACLE_SID%%
# 'ls' works
# TEST_BEFORE_RUN = ls /oracle/admin/%%ORACLE_SID%%


# ===================================================================
[ORACLE]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# -----
# ORACLE_SID
#
# You MAY set the ORACLE_SID here but normally it is set 
# in the environment script to which the oracle_env links 
# points to.
#
# ORACLE_SID = orcl

# -----
# ORACLE_HOME
#
# You MAY set the ORACLE_SID here but normally it is set
# in the environment script to which the oracle_env links
# points to.
#
# ORACLE_HOME = /oracle/product/...


# -----
# SQLPLUS_COMMAND
#
# Set the sqlplus command, mostly if a special user will
# execute the sqlplus command and not the SYSDBA.

# This is the default
# SQLPLUS_COMMAND = sqlplus -S "/ as sysdba"
#
# SQLPLUS_COMMAND = sqlplus -S "sys/password as sysdba"



# ===================================================================
[ULS]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+

# -----
# The ULS_HOSTNAME is the name of the server under which Oracle's
# data will be placed. This may be a concrete hostname, a name of
# a cluster package or a virtual hostname (but must be known in
# the ULS-Server's server list).

# ULS_HOSTNAME = my.constant.expression
#
# ULS_HOSTNAME = `hostname -s`
# 'hostname -s' will not work on HP-UX
#
# ULS_HOSTNAME = DOMAIN:`hostname`:<CLASS>

ULS_HOSTNAME=`if [ "$(uname)" = "HP-UX" ] ; then hostname ; else hostname -s ;fi`

# -----
# ULS_SECTION
#
# The section expression used in ULS

ULS_SECTION = Oracle DB [%%ORACLE_SID%%]

# For multitenant environments, this is the 
# ULS_SECTION for each pluggable database.
# e.g. Oracle PDB [pdb]

ULS_SECTION_PDB = Oracle PDB [__PDB_NAME__]


# -----
# Optional ULS-related settings
#
# But in most cases the defaults will do fine.

# Path and name of the uls.conf (of uls-client package),
# ULS_CONF = /etc/uls/uls.conf

# If set to 1, no transfer of values to the ULS-server will be
# startet. The directory containing the value file(s) (derived from ULS_DATA_CACHE)
# will not be deleted.
# ULS_FAKE = 1

# Master path from which to build the final directory.
# The process id will be appended.
# ULS_DATA_CACHE = /tmp/uls
# The resulting directory will e.g. look like: /tmp/uls.01234

# The command that will transfer the contents of the directory
# as ULS value files to the ULS server and remove the directory
# when finished.
# ULS_FLUSH_TEST_VALUES = flush_test_values __DIRECTORY__
# ULS_FLUSH_TEST_VALUES = flush_test_values -u <uls_ip:uls_port> __DIRECTORY__

# The encoding of the written uls value file.
# { 'latin1' | 'utf8' } are supported, 'latin1' is the default.
# ULS_OUTPUT_ENCODING = utf8



# ===================================================================
[WATCH_ORACLE]

#  +=====================================================+
#  | DO NOT CHANGE THIS FILE                             |
#  | USE A SECOND ONE                                    |
#  | and overwrite the parameters with your definition!  |
#  |                                                     |
#  | See the notes at the beginning of this file.        |
#  +=====================================================+


# Specify an identifier, "_watch_oracle" is the default
IDENTIFIER = _watch_oracle


# -----
# Options:
#
# A comma separated list of options for extended monitoring.
#
# CURSORS
#   -- cursors -- open cursors            | open_cursors | count | max | avg
#              -- session cached cursors  | session_cached_cursors | sessions hit limit | avg
#
# DETAILED_DICTIONARY_CACHE
# DETAILED_LIBRARY_CACHE
# FAILED_LOGIN_REPORT
# GROUPED_CONNECTIONS
#   -- grouped connections -- program -- machine -- os_user -- db_user | count
#
# JOBS
# LATCHES
# ROLLBACK
# SCHEDULER
# SCHEMA_INFO
#
# SERVICE_CHECK
#   (only for pdbs)
#
# TNSPING
# WAIT_EVENTS
# WAIT_EVENT_CLASSES
#
# NOTE: The FAILED_LOGIN_REPORT usually contains real user names and real computernames. 
#       Disable this option if it is NOT in compliance with your privacy commitment!
# 
#
# Default:
# OPTIONS = FAILED_LOGIN_REPORT, TNSPING

OPTIONS = FAILED_LOGIN_REPORT, TNSPING, CURSORS

